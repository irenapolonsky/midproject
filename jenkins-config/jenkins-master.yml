---
- name: Install Jenkins
  hosts: all

  vars:
    java_version: "openjdk-8-jre"
    gpg_key: "https://pkg.jenkins.io/debian/jenkins.io.key"
    repo_URL: "deb https://pkg.jenkins.io/debian binary/"
    java_options: "-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
    cli_jar: "http://localhost:8080/jnlpJars/jenkins-cli.jar"

  tasks:
    - name: install java
      apt:
        name: "{{java_version}}"
        state: present

    - name: Get jenkins apt repo key
      apt_key:
        url: "{{gpg_key}}"
        state: present

    - name: Add Jenkins apt repo
      apt_repository:
        repo: "{{repo_URL}}"
        state: present
        update_cache: true

    - name: Update APT package manager repositories cache
      become: true
      apt:
        update_cache: yes

    - name: install jenkins
      apt:
        name: jenkins
        state: present

    - name: Start Jenkins service and enable on boot
      service:
        name: jenkins
        state: started
        enabled: yes

    - name: sleep for 30 seconds and continue with play
      wait_for: timeout=30

    - name: change defaults for Jenkins automation server to disable Jenkins setup wizard
      lineinfile:
        dest=/etc/default/jenkins
        regexp=^JAVA_ARGS=
        line=JAVA_ARGS="{{java_options}}"
      become: true

    - name: Create initialization scripts directory
      file: path=/var/lib/jenkins/init.groovy.d
            state=directory
            owner=jenkins
            group=jenkins
            mode=0775

    - name: Add initialization script to setup basic security
      template: src=security.groovy.j2
                dest=/var/lib/jenkins/init.groovy.d/security.groovy

    - name: restart jenkins
      service: name=jenkins state=restarted

    - name: sleep for 30 seconds and continue with play
      wait_for: timeout=30
      delegate_to: localhost

    - name: Download CLI jar
      get_url:
        url: "cli_jar"
        dest: /opt/jenkins-cli.jar

    #- name: Install plugin
    #  shell: java -jar /opt/jenkins-cli.jar -s http://localhost:8080/ install-plugin {{ item }}
    #  with_items: jenkins_plugins
    #  when: jenkins_plugins is defined

    #- name: Restart Jenkins
    #  service: name=jenkins state=restarted enabled=yes
    #  when: jenkins_plugins is defined

    - name: init password jenkins for Admin
      shell: cat /var/lib/jenkins/secrets/initialAdminPassword
      changed_when: false
      register: result

    #- name: Jenkins - Create Clone GitRepo Job
    #  shell: java -jar /opt/jenkins-cli.jar -s http://192.168.100.100:8080/ -auth admin:{{ packages }} create-job CloneGitRepo < /home/ubuntu/midproject/CloneGitRepo_Job.xml
    #  become: yes
    #  become_method: sudo

    #- name: Jenkins - Create BuildDockerImage Job
    #  shell: java -jar /opt/jenkins-cli.jar -s http://192.168.100.100:8080/ -auth admin:{{ packages }} create-job BuildDockerImage < /home/ubuntu/midproject/BuildDockerImage_Job.xml
    #  become: yes
    #  become_method: sudo

    #- name: Jenkins - Create RunDockerContainer Job
    #  shell: java -jar /opt/jenkins-cli.jar -s http://192.168.100.100:8080/ -auth admin:{{ packages }} create-job RunDockerContainer < /home/ubuntu/midproject/RunDockerContainer_Job.xml
    #  become: yes
    #  become_method: sudo

    #- name: Jenkins - Create UploadDockerImageToDockerHub Job
    #  shell: java -jar /opt/jenkins-cli.jar -s http://192.168.100.100:8080/ -auth admin:{{ packages }} create-job UploadDockerImageToDockerHub < /home/ubuntu/midproject/UploadDockerImageToDockerHub_Job.xml
    #  become: yes
    #  become_method: sudo

    #- name: Jenkins - Run Clone GitRepo Job
    #  shell: java -jar /opt/jenkins-cli.jar -s http://192.168.100.100:8080/ -auth admin:{{ packages }} build CloneGitRepo
    #  become: yes
    #  become_method: sudo

    #- name: Jenkins - Run BuildDockerImage Job
    #  shell: java -jar /opt/jenkins-cli.jar -s http://192.168.100.100:8080/ -auth admin:{{ packages }} build BuildDockerImage
    #  become: yes
    #  become_method: sudo

    #- name: sleep for 30 seconds and continue with play
    #  wait_for: timeout=30
    #  delegate_to: localhost

    #- name: Jenkins - Run RunDockerContainer Job
    #  shell: java -jar /opt/jenkins-cli.jar -s http://192.168.100.100:8080/ -auth admin:{{ packages }} build RunDockerContainer
    #  become: yes
    #  become_method: sudo

    #- name: Jenkins - Run UploadDockerImageToDockerHub Job
    #  shell: java -jar /opt/jenkins-cli.jar -s http://192.168.100.100:8080/ -auth admin:{{ packages }} build UploadDockerImageToDockerHub
    #  become: yes
    #  become_method: sudo

    - name: print init password jenkins Admin
      debug:
        var: result.stdout
